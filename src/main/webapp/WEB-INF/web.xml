<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring.xml</param-value>
  </context-param>

  <!-- 防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <!--加载spring容器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- logback 日志监听 -->
  <listener>
    <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
  </listener>

  <!--编码过滤器 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!-- shiro 安全过滤器 -->
  <!--<filter>-->
  <!--<filter-name>shiroFilter</filter-name>-->
  <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
  <!--<async-supported>true</async-supported>-->
  <!--<init-param>-->
  <!--<param-name>targetFilterLifecycle</param-name>-->
  <!--<param-value>true</param-value>-->
  <!--</init-param>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
  <!--<filter-name>shiroFilter</filter-name>-->
  <!--<url-pattern>/*</url-pattern>-->
  <!--<dispatcher>REQUEST</dispatcher>-->
  <!--<dispatcher>FORWARD</dispatcher>-->
  <!--<dispatcher>INCLUDE</dispatcher>-->
  <!--<dispatcher>ERROR</dispatcher>-->
  <!--<dispatcher>ASYNC</dispatcher>-->
  <!--</filter-mapping>-->

  <!-- Spring MVC -->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <!--支持异步请求处理 web.xml的所有servlet和filter 都需设置-->
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.ico</url-pattern>
  </servlet-mapping>

  <!--<error-page>-->
  <!--<error-code>400</error-code>-->
  <!--<location>/error/400</location>-->
  <!--</error-page>-->
  <!--<error-page>-->
  <!--<error-code>404</error-code>-->
  <!--<location>/error/404</location>-->
  <!--</error-page>-->
  <!--<error-page>-->
  <!--<error-code>500</error-code>-->
  <!--<location>/error/500</location>-->
  <!--</error-page>-->

  <welcome-file-list>
    <welcome-file>/</welcome-file>
  </welcome-file-list>
</web-app>
